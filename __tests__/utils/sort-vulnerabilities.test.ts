import {expect, it, describe} from '@jest/globals'
import { Vulnerability } from '../../src/models/vulnerability';
import { VulnerabilitySeverity } from '../../src/models/vulnerability-severity';
import { VulnerabilityState } from '../../src/models/vulnerability-state';
import { sortVulnerabilities } from '../../src/utils/sort-vulnerabilities';

describe('sort-vulnerabilities', () => {
    it('should sort a list vulnerabilities from high to low severity', async () => {
        const vulnerabilities: Vulnerability[] = [
            {
              createdAt: "2022-02-02T12:32:52Z",
              id: "RVA_kwDOGOGtuM5g09lz",
              number: 9,
              state: VulnerabilityState.OPEN,
              securityVulnerability: {
                severity: VulnerabilitySeverity.MODERATE,
                advisory: {
                  cvss: {
                    score: 0
                  },
                  summary: "Prototype Pollution in hoek"
                },
                package: {
                  name: "hoek",
                  ecosystem: "NPM"
                }
              },
              securityAdvisory: {
                summary: "Prototype Pollution in hoek"
              }
            },
            {
              createdAt: "2022-02-02T12:32:52Z",
              id: "RVA_kwDOGOGtuM5g09l0",
              number: 10,
              state: VulnerabilityState.OPEN,
              securityVulnerability: {
                severity: VulnerabilitySeverity.CRITICAL,
                advisory: {
                  cvss: {
                    score: 0
                  },
                  summary: "Regular Expression Denial of Service in mime"
                },
                package: {
                  name: "mime",
                  ecosystem: "NPM"
                }
              },
              securityAdvisory: {
                summary: "Regular Expression Denial of Service in mime"
              }
            },
            {
              createdAt: "2022-02-02T12:32:52Z",
              id: "RVA_kwDOGOGtuM5g09l1",
              number: 11,
              state: VulnerabilityState.OPEN,
              securityVulnerability: {
                severity: VulnerabilitySeverity.LOW,
                advisory: {
                  cvss: {
                    score: 0
                  },
                  summary: "Prototype Pollution in lodash"
                },
                package: {
                  name: "lodash",
                  ecosystem: "NPM"
                }
              },
              securityAdvisory: {
                summary: "Prototype Pollution in lodash"
              }
            }
          ]

        const sorted = sortVulnerabilities(vulnerabilities)
        const ids = sorted.map(it => it.id)

        expect(ids).toEqual(['RVA_kwDOGOGtuM5g09l0', 'RVA_kwDOGOGtuM5g09lz', 'RVA_kwDOGOGtuM5g09l1'])
    })
})