import {expect, it, describe} from '@jest/globals'
import {Vulnerability} from '../../src/models/vulnerability'
import { VulnerabilitySeverity } from '../../src/models/vulnerability-severity'
import { VulnerabilityState } from '../../src/models/vulnerability-state'
import { createMarkdownReport } from '../../src/report/markdown-report'

describe('markdown-report', () => {
  it('should create valid report based on an unordered set of vulnerabilities', async () => {
    const vulnerabilities: Vulnerability[] = [
      {
        createdAt: "2022-02-02T12:32:52Z",
        id: "RVA_kwDOGOGtuM5g09lz",
        number: 9,
        state: VulnerabilityState.OPEN,
        securityVulnerability: {
          severity: VulnerabilitySeverity.MODERATE,
          advisory: {
            cvss: {
              score: 0
            },
            summary: "Prototype Pollution in hoek"
          },
          package: {
            name: "hoek",
            ecosystem: "NPM"
          }
        },
        securityAdvisory: {
          summary: "Prototype Pollution in hoek"
        }
      },
      {
        createdAt: "2022-02-02T12:32:52Z",
        id: "RVA_kwDOGOGtuM5g09l0",
        number: 10,
        state: VulnerabilityState.OPEN,
        securityVulnerability: {
          severity: VulnerabilitySeverity.CRITICAL,
          advisory: {
            cvss: {
              score: 0
            },
            summary: "Regular Expression Denial of Service in mime"
          },
          package: {
            name: "mime",
            ecosystem: "NPM"
          }
        },
        securityAdvisory: {
          summary: "Regular Expression Denial of Service in mime"
        }
      },
      {
        createdAt: "2022-02-02T12:32:52Z",
        id: "RVA_kwDOGOGtuM5g09l1",
        number: 11,
        state: VulnerabilityState.OPEN,
        securityVulnerability: {
          severity: VulnerabilitySeverity.LOW,
          advisory: {
            cvss: {
              score: 0
            },
            summary: "Prototype Pollution in lodash"
          },
          package: {
            name: "lodash",
            ecosystem: "NPM"
          }
        },
        securityAdvisory: {
          summary: "Prototype Pollution in lodash"
        }
      }
    ]

    const md = createMarkdownReport(vulnerabilities)
    console.log(md)
    expect(md).toBe(
` # ðŸ¤– Vulnerability Report
* **Critical:** 1 vulnerabilities
* **High:** 0 vulnerabilities
* **Low:** 1 vulnerabilities
* **Moderate:** 1 vulnerabilities
    
<details>
    <summary>View details</summary>
      
* **(critical)** [npm] mime - Regular Expression Denial of Service in mime
* **(moderate)** [npm] hoek - Prototype Pollution in hoek
* **(low)** [npm] lodash - Prototype Pollution in lodash
</details>`.trim()
    )
  })
})


