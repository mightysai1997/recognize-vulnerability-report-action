import {graphql} from '@octokit/graphql'
import {Vulnerability} from '../models/vulnerability'

export const fetchVulnerabilities = async (
  graphqlClient: typeof graphql,
  repositoryOwner: string,
  repositoryName: string
): Promise<Vulnerability[]> => {
  let result: Vulnerability[] = []

  let cursor
  let total

  while (total === undefined || result.length < total) {
    const {
      repository: {vulnerabilityAlerts}
    } = await graphqlClient(
      `
            query($repositoryName:String!, $repositoryOwner: String!, $perPage: Int = 100, $cursor: String) {
                repository(
                    name: $repositoryName
                    owner: $repositoryOwner
                ) {
                    vulnerabilityAlerts(first: $perPage, after: $cursor) {
                        nodes {
                            createdAt
                            id
                            number
                            state
                            securityVulnerability {
                                severity
                                advisory {
                                    cvss {
                                        score
                                    }
                                    summary
                                }
                                package {
                                    name
                                    ecosystem
                                }
                            }
                            securityAdvisory {
                                summary
                            }
                        }
                        pageInfo {
                            startCursor
                            hasNextPage
                            endCursor
                            hasPreviousPage
                        }
                        totalCount
                    }
                }
            }
            `,
      {
        repositoryOwner,
        repositoryName,
        cursor
      }
    )

    cursor = vulnerabilityAlerts.pageInfo.endCursor
    total = vulnerabilityAlerts.totalCount

    result = [...result, ...(vulnerabilityAlerts.nodes as Vulnerability[])]
  }

  return result
}
